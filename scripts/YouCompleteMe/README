[References]
http://valloric.github.io/YouCompleteMe/#full-installation-guide
https://github.com/Valloric/YouCompleteMe
http://blog.jobbole.com/58978/
http://zuyunfei.com/2013/05/16/killer-plugin-of-vim-youcompleteme/
https://github.com/Valloric/ycmd/blob/master/cpp/ycm/.ycm_extra_conf.py

[General installation steps]
1. Ensure that your version of Vim is at least 7.3.598 and that it has support for Python 2 or Python 3 scripting.
    :version
    :echo has('python') || has('python3')

2. Install YCM with Vundle. This would mean adding a Plugin 'Valloric/YouCompleteMe' line to your vimrc.

3. Download the latest version of libclang. We recommend using the official binaries from (http://llvm.org/releases/download.html) if at all possible. Make sure you download the correct archive file for your OS.

4. Compile the ycm_core library that YCM needs. This library is the C++ engine that YCM uses to get fast completions. (CMAKE needed)

5. Set up support for additional languages, as desired:
    * C# support: install Mono on non-Windows platforms. Navigate to YouCompleteMe/third_party/ycmd/third_party/OmniSharpServer and run msbuild (Windows) or xbuild (other platforms, using Mono) depending on your platform. On Windows, be sure that the build utility msbuild is in your PATH.
    Go support: install Go and add it to your path. Navigate to YouCompleteMe/third_party/ycmd/third_party/gocode and run go build.
    TypeScript support: as with the quick installation, simply npm install -g typescript after successfully installing Node.js and npm.
    JavaScript support: install Node.js and npm. Then navigate to YouCompleteMe/third_party/ycmd/third_party/tern_runtime and run npm install --production
    Rust support: install Rust. Navigate to YouCompleteMe/third_party/ycmd/third_party/racerd and run cargo build --release.

[Tricky parts for Windows]  
1. In vim check :version and :echo has('python') || has('python3')  
2. Install YCM with Vundle  
3. Download and install the free Microsoft Visual Studio Express 2015 for Windows Desktop  
3. Download and install the latest version of libclang 'LLVM-3.8.1-win64.exe' and install to e.g. 'C:\Program Files\LLVM'  
4. Download and install the latest version of cmake 'cmake-3.6.1-win64-x64.msi' to e.g. 'C:\Program Files\CMake'  
5. Download and install Python 2 or Python 3 'python-2.7.12.amd64.msi' to e.g. 'C:\Python27'  
6. Add system PATH : 'C:\Python27;C:\Program Files\CMake\bin;'  
7. Open cmd.exe and generate VisualStudio project files: 1. 'cd C:\cygwin64\home\sl888213\.vim\bundle\YouCompleteMe\tmp\build' 2. 'cmake -G "Visual Studio 14 Win64" -DPATH_TO_LLVM_ROOT="C:\Program Files\LLVM" . "C:\cygwin64\home\sl888213\.vim\bundle\YouCompleteMe\third_party\ycmd\cpp"'  
8. Click on the generated 'YouCompleteMe.sln' and compile the ycm_core library, output will be 'build\ycm\Debug\ycm_core.lib'  

[User Guide]
C-family Semantic Completion
YCM looks for a .ycm_extra_conf.py file in the directory of the opened file or in any directory above it in the hierarchy (recursively); when the file is found, it is loaded (only once!) as a Python module.  

See YCM's own .ycm_extra_conf.py for details on how this works. Your project needs different flags. Hint: just replace the strings in the flags variable with compilation flags necessary for your project. That should be enough for 99% of projects.  
